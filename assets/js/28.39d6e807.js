(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{346:function(t,a,s){"use strict";s.r(a);var n=s(3),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("今天要讲的"),a("code",[t._v("BlockingQueue")]),t._v("可谓是大名鼎鼎，在并发编程中比较常见的一个类。"),a("br"),t._v(" "),a("code",[t._v("BlockingQueue")]),t._v("顾名思义是表示一个阻塞队列，注意这两个词：阻塞和队列。可以拿我们熟悉的生产者-消费者队列来举例，一条流水线上，A生产零件，B组装零件，A就是生产者，B是消费者。如果A生成的太快，则零件堆积，A需要休息一会儿等待B把零件消费完；如果A生产的太慢，则B变得无活可干，被迫休息。"),a("br"),t._v("\n在"),a("code",[t._v("BlockingQueue")]),t._v("中"),a("code",[t._v("offer()")]),t._v("和"),a("code",[t._v("put()")]),t._v("就是把零件放到队列中，"),a("code",[t._v("poll()")]),t._v("和"),a("code",[t._v("take()")]),t._v("就是从队列中取出零件进行消费。需要注意的是"),a("code",[t._v("put()")]),t._v("和"),a("code",[t._v("take()")]),t._v("是阻塞方法，而"),a("code",[t._v("offer()")]),t._v("和"),a("code",[t._v("poll()")]),t._v("是非阻塞方法，也就是"),a("code",[t._v("put()")]),t._v("的时候队列满了，则阻塞；而"),a("code",[t._v("offer()")]),t._v("的时候队列满了，则返回false，不阻塞。"),a("code",[t._v("take()")]),t._v("和"),a("code",[t._v("poll()")]),t._v("方法同理。"),a("br")]),t._v(" "),a("p",[a("code",[t._v("BlockingQueue")]),t._v("是一个接口，使用起来比较简单。他的实现类如下："),a("br"),t._v(" "),a("img",{attrs:{src:"https://cdn.staticaly.com/gh/xuanyuanli/Img@master/picx/image.2qappkzmpag0.jpg",alt:"image"}}),a("br"),t._v("\n比较常用的是"),a("code",[t._v("ArrayBlockingQueue")]),t._v("和"),a("code",[t._v("LinkedBlockingQueue")]),t._v("，从名字也可以看出来，"),a("code",[t._v("ArrayBlockingQueue")]),t._v("适合做有界队列，"),a("code",[t._v("LinkedBlockingQueue")]),t._v("适合做无界队列。"),a("br"),t._v("\n这里只看一下简单使用：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayBlockingQueue")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" queue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayBlockingQueue")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nqueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nqueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("take")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("一般来说"),a("code",[t._v("put()")]),t._v("和"),a("code",[t._v("take()")]),t._v("方法会分散在两个或多个线程中。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("如果你的好奇心比较重，想研究一下"),a("code",[t._v("BlockingQueue")]),t._v("的实现原理，那么当你看一下"),a("code",[t._v("ArrayBlockingQueue")]),t._v("的源码，就会发现一些有趣的东西：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** Main lock guarding all access */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),t._v(" lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** Condition for waiting takes */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" notEmpty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** Condition for waiting puts */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" notFull"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这就涉及到我们前面文章讲过的"),a("code",[t._v("ReentrantLock")]),t._v("和"),a("code",[t._v("Condition")]),t._v("了。")])])}),[],!1,null,null,null);a.default=e.exports}}]);