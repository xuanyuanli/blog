name: Comprehensive Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM
  workflow_dispatch:

jobs:
  test-matrix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: macos
            
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Rust (for Tauri)
      if: matrix.os != 'ubuntu-latest'
      uses: dtolnay/rust-toolchain@stable
      
    - name: Install Tauri dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
        
    - name: Complete unit test suite
      run: npm run test:unit:all
      
    - name: Integration tests
      run: npm run test:integration
      env:
        TEST_PLATFORM: ${{ matrix.platform }}
        
    - name: Platform-specific tests
      run: npm run test:platform:${{ matrix.platform }}
      continue-on-error: true
      
    - name: Performance benchmark tests
      run: npm run performance:benchmark
      continue-on-error: true
      
    - name: Build application
      run: npm run build
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.os }}-node${{ matrix.node-version }}
        path: |
          coverage/
          test-results/
          jest-junit.xml
          
  security-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Security tests
      run: npm run test:security
      
    - name: Dependency audit
      run: npm audit --audit-level=high
      
    - name: License check
      run: npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC'
      continue-on-error: true
      
    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          security-reports/
          audit-results.json
          
  compatibility-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Cross-platform compatibility tests
      run: npm run test:compatibility
      
    - name: Upload compatibility reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: compatibility-reports
        path: compatibility-reports/